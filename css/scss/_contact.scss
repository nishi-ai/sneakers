@use "./variables";

#contact {
  color: #fff;
  background-color: variables.$main-text-color;
  padding: 80px 30px;
  margin-top: 50px;
}

#contact .content {
  max-width: 1240px;
  padding: 0 16px;
  margin: 0 auto;
  display: flex;
  justify-content: space-between;
}

#contact-title {
  font-size: 18px;
  border-bottom: 1px solid;
  padding: 8px 16px;
  margin-bottom: 16px;
}

#contact .contact-info p {
  margin-bottom: 30px;
}

#contact .contact-info,
#contact .contact-form {
  width: 45%;
}

#contact .contact-form {
  // margin-top: 20px;
  dt {
    padding: 8px;
  }
}

label {
  font-size: 13px;
  font-weight: normal;
  pointer-events: none;
  opacity: 0.5;
  top: 10px;
  transition: 0.2s ease all;
  -moz-transition: 0.2s ease all;
  -webkit-transition: 0.2s ease all;
}

#contact .contact-form input,
#contact .contact-form textarea {
  width: 100%;
  border: 0.5px solid #1a1f23;
  border-width: 0px 0px 1px 0px;
  padding: 8px;
  margin-bottom: 20px;
  opacity: 0.5;
  transition: 0.2s ease;
  color: #fff;
}

#contact .contact-form input:focus,
#contact .contact-form textarea:focus {
  outline: none;
  opacity: 1;
}

#contact .contact-form .button input {
  width: 200px;
  float: right;
  color: #fff;
  transition: 0.2s ease;

  &:hover {
    color: #b1b1b1;
    cursor: pointer;
  }
}

#close {
  cursor: pointer;
  width: 180px;
  border: 1px solid #ccc;
  border-radius: 4px;
  text-align: center;
  padding: 12px 0;
  margin: 16px auto 0;
  color: variables.$main-text-color;
}

#mask {
  background: rgba(0, 0, 0, 0.4);
  position: fixed;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
}

#modal {
  background: #fff;
  max-width: 400px;
  padding: 20px;
  border-radius: 4px;
  // positioning attached to contact section
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  margin: 0 auto;
}

#modal > p {
  margin: 0 0 20px;
  color: variables.$main-text-color;
}

#mask.hidden {
  display: none;
}

#modal.hidden {
  transform: translate(0, -4000px);
}

// FAQ section
.contact-info {
  dl {
    margin: 0;
  }

  // make space for each Q&A
  dl > div {
    margin-bottom: 8px;
  }

  // dt = Question
  dt {
    padding: 8px;
    cursor: pointer;
    user-select: none;
    position: relative;
  }

  dt::before {
    content: "Q. ";
  }

  dt::after {
    content: "+";
    position: absolute;
    top: 8px;
    right: 16px;
    transition: transform 0.3s;
  }

  dl > div.appear dt::after {
    transform: rotate(45deg);
  }

  // dd = answer
  dd {
    padding: 8px;
    margin: 0;
    display: none;
  }

  dd::before {
    content: "A. ";
  }

  dl > div.appear dd {
    display: block;
    animation: 0.4s fadeIn;
  }

  // use @keyframes FadeIn, since the dd is hidden first and a transision property cannot be set
  @keyframes fadeIn {
    0% {
      opacity: 0;
      // start from -10px to move down from hidden state
      transform: translateY(-5px);
    }
    100% {
      opacity: 1;
      transform: none;
    }
  }
}
